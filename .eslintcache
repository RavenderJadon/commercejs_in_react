[{"/Users/rj/e_commerce/src/App.js":"1","/Users/rj/e_commerce/src/reportWebVitals.js":"2","/Users/rj/e_commerce/src/index.js":"3","/Users/rj/e_commerce/src/components/Products/Products.jsx":"4","/Users/rj/e_commerce/src/components/Product/Product.jsx":"5","/Users/rj/e_commerce/src/components/Product/styles.js":"6","/Users/rj/e_commerce/src/components/Navbar/styles.js":"7","/Users/rj/e_commerce/src/components/Navbar/Navbar.jsx":"8","/Users/rj/e_commerce/src/components/Products/styles.js":"9","/Users/rj/e_commerce/src/components/lib/commerce.js":"10","/Users/rj/e_commerce/src/components/Cart/Cart.jsx":"11","/Users/rj/e_commerce/src/components/Cart/styles.js":"12","/Users/rj/e_commerce/src/components/Cart/CartItem/CartItem.jsx":"13","/Users/rj/e_commerce/src/components/Cart/CartItem/styles.js":"14","/Users/rj/e_commerce/src/components/CheckoutForm/Checkout/Checkout.jsx":"15","/Users/rj/e_commerce/src/components/CheckoutForm/PaymentForm.jsx":"16","/Users/rj/e_commerce/src/components/CheckoutForm/Checkout/styles.js":"17","/Users/rj/e_commerce/src/components/CheckoutForm/AddressForm.jsx":"18","/Users/rj/e_commerce/src/components/CheckoutForm/CustomTextField.jsx":"19","/Users/rj/e_commerce/src/components/CheckoutForm/Review.jsx":"20"},{"size":2769,"mtime":1611239633650,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1608366829502,"results":"23","hashOfConfig":"22"},{"size":289,"mtime":1610951195634,"results":"24","hashOfConfig":"22"},{"size":661,"mtime":1611032943774,"results":"25","hashOfConfig":"22"},{"size":1248,"mtime":1611033080161,"results":"26","hashOfConfig":"22"},{"size":348,"mtime":1610954393175,"results":"27","hashOfConfig":"22"},{"size":1565,"mtime":1610957603489,"results":"28","hashOfConfig":"22"},{"size":1465,"mtime":1611044113878,"results":"29","hashOfConfig":"22"},{"size":287,"mtime":1610957427878,"results":"30","hashOfConfig":"22"},{"size":126,"mtime":1610958452210,"results":"31","hashOfConfig":"22"},{"size":2011,"mtime":1611053354136,"results":"32","hashOfConfig":"22"},{"size":570,"mtime":1611038998879,"results":"33","hashOfConfig":"22"},{"size":1419,"mtime":1611050134454,"results":"34","hashOfConfig":"22"},{"size":333,"mtime":1611042026371,"results":"35","hashOfConfig":"22"},{"size":3322,"mtime":1611241555408,"results":"36","hashOfConfig":"22"},{"size":2676,"mtime":1611239988859,"results":"37","hashOfConfig":"22"},{"size":1158,"mtime":1611055382030,"results":"38","hashOfConfig":"22"},{"size":5351,"mtime":1611230734692,"results":"39","hashOfConfig":"22"},{"size":482,"mtime":1611241062814,"results":"40","hashOfConfig":"22"},{"size":891,"mtime":1611233287660,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e06y30",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rj/e_commerce/src/App.js",[],"/Users/rj/e_commerce/src/reportWebVitals.js",[],["92","93"],"/Users/rj/e_commerce/src/index.js",[],["94","95"],"/Users/rj/e_commerce/src/components/Products/Products.jsx",[],"/Users/rj/e_commerce/src/components/Product/Product.jsx",[],["96","97"],"/Users/rj/e_commerce/src/components/Product/styles.js",[],"/Users/rj/e_commerce/src/components/Navbar/styles.js",[],["98","99"],"/Users/rj/e_commerce/src/components/Navbar/Navbar.jsx",["100","101"],"import {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Badge,\n  MenuItem,\n  Menu,\n  Typography,\n} from \"@material-ui/core\";\nimport { ShoppingCart } from \"@material-ui/icons\";\nimport logo from \"../../assets/commerce.png\";\nimport useStyles from \"./styles\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst Navbar = ({ totalItems }) => {\n  const classes = useStyles();\n  const location = useLocation();\n\n  return (\n    <div>\n      <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\n        <Toolbar>\n          <Typography\n            component={Link}\n            to=\"/\"\n            variant=\"h6\"\n            className={classes.title}\n            color=\"inherit\"\n          >\n            <img\n              src={logo}\n              alt=\"commerce\"\n              height=\"25px\"\n              className={classes.image}\n            />\n            commerce\n          </Typography>\n          <div className={classes.grow} />\n          {location.pathname === \"/\" && (\n            <div className={classes.button}>\n              <IconButton\n                component={Link}\n                to=\"/cart\"\n                aria-label=\"Show cart items\"\n                color=\"inherit\"\n              >\n                <Badge badgeContent={totalItems} color=\"secondary\">\n                  <ShoppingCart />\n                </Badge>\n              </IconButton>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/Users/rj/e_commerce/src/components/Products/styles.js",[],"/Users/rj/e_commerce/src/components/lib/commerce.js",[],"/Users/rj/e_commerce/src/components/Cart/Cart.jsx",["102"],"import { Container, Typography, Button, Grid } from \"@material-ui/core\";\nimport CartItem from \"./CartItem/CartItem\";\nimport { LocalDining } from \"@material-ui/icons\";\nimport useStyles from \"./styles\";\nimport { Link } from \"react-router-dom\";\n\nconst Cart = ({ cart,handelUpdateCartQty,handelRemoveFromCart,handelEmptyCart }) => {\n  const classes = useStyles();\n\n  const EmptyCart = () => (\n    <Typography variant=\"subtitle1\">\n      You have no item in cart start adding some\n      <Link to=\"/\" className={classes.link }> Start Adding Some </Link>!\n    </Typography>\n  );\n\n  const FilledCart = () => (\n    <div>\n      <Grid container spacing={3}>\n        {cart.line_items.map((item) => (\n          <Grid item xs={12} sm={4} key={item.id}>\n            <CartItem item={item} onUpdateCartQty={handelUpdateCartQty} onRemoveFromCart={handelRemoveFromCart}/>\n          </Grid>\n        ))}\n      </Grid>\n      <div className={classes.cardDetails}>\n        <Typography variant=\"h4\">\n          Subtotal: {cart.subtotal.formatted_with_symbol}\n        </Typography>\n        <div>\n          <Button\n            className={classes.emptyButton}\n            size=\"large\"\n            type=\"button\"\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={handelEmptyCart}\n          >\n            Empty Cart\n          </Button>\n          <Button\n            component={Link}\n            to=\"/checkout\"\n            className={classes.checkoutButton}\n            size=\"large\"\n            type=\"button\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            CheckOut\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n\n  if (!cart.line_items) return \"loading...\";\n\n  return (\n    <Container>\n      <div className={classes.toolbar} />\n      <Typography className={classes.title} variant=\"h3\" gutterBottom>\n        Your Shopping Cart\n      </Typography>\n      {!cart.line_items.length ? <EmptyCart /> : <FilledCart />}\n    </Container>\n  );\n};\n\nexport default Cart;\n","/Users/rj/e_commerce/src/components/Cart/styles.js",[],"/Users/rj/e_commerce/src/components/Cart/CartItem/CartItem.jsx",[],"/Users/rj/e_commerce/src/components/Cart/CartItem/styles.js",[],["103","104"],"/Users/rj/e_commerce/src/components/CheckoutForm/Checkout/Checkout.jsx",["105"],"import { useState, useEffect } from \"react\";\nimport {\n  Paper,\n  Stepper,\n  Step,\n  StepLabel,\n  Typography,\n  CircularProgress,\n  Divider,\n  Button,\n  CssBaseline\n} from \"@material-ui/core\";\nimport { Link, useHistory } from 'react-router-dom';\nimport useStyles from \"./styles\";\nimport AddressForm from \"../AddressForm\";\nimport PaymentForm from \"../PaymentForm\";\nimport { commerce } from \"../../lib/commerce\";\n\nconst steps = [\"Shipping address\", \"Payment details\"];\n\nconst Checkout = ({ cart, order, onCaptureCheckout, error }) => {\n  const [activeStep, setActiveStep] = useState(0);\n  const [checkoutToken, setCheckoutToken] = useState(null);\n  const [shippingData, setShippingData] = useState({});\n  const classes = useStyles();\n  const history = useHistory;\n  console.log(\"hii\");\n\n  useEffect(() => {\n    const generateToken = async () => {\n      try {\n        const token = await commerce.checkout.generateToken(cart.id, {\n          type: \"cart\",\n        });\n        console.log(\"token\", token);\n        setCheckoutToken(token);\n      } catch (error) {\n        console.log(error);\n        history.pushState('/')\n      }\n    };\n    generateToken();\n  }, [cart]);\n\n  const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\n\n  const next = (data) => {\n    setShippingData(data);\n    nextStep();\n  };\n\n  let Confirmation = () => (order.customer ? (\n    <>\n      <div>\n        <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname}!</Typography>\n        <Divider className={classes.divider} />\n        <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\n      </div>\n      <br />\n      <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\n    </>\n  ) : (\n    <div className={classes.spinner}>\n      <CircularProgress />\n    </div>\n  ));\n  if (error) {\n    Confirmation = () => (\n      <>\n        <Typography variant=\"h5\">Error: {error}</Typography>\n        <br />\n        <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\n      </>\n    );\n  }\n\n  const Form = () =>\n    activeStep === 0 ? (\n      <AddressForm\n      checkoutToken={checkoutToken}\n      nextStep={nextStep}\n      setShippingData={setShippingData}\n      next={next} />\n    ) : (\n      <PaymentForm\n        checkoutToken={checkoutToken}\n        nextStep={nextStep}\n        backStep={backStep}\n        shippingData={shippingData}\n        onCaptureCheckout={onCaptureCheckout}\n      />\n    );\n\n  return (\n    <>\n    <CssBaseline/>\n      <div className={classes.toolbar} />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography variant=\"h4\" align=\"center\">\n            Checkout\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((step) => (\n              <Step key={step}>\n                <StepLabel>{step}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          {activeStep === steps.length ? (\n            <Confirmation />\n          ) : (\n            checkoutToken && <Form />\n          )}\n        </Paper>\n      </main>\n    </>\n  );\n};\n\nexport default Checkout;\n","/Users/rj/e_commerce/src/components/CheckoutForm/PaymentForm.jsx",[],["106","107"],"/Users/rj/e_commerce/src/components/CheckoutForm/Checkout/styles.js",[],"/Users/rj/e_commerce/src/components/CheckoutForm/AddressForm.jsx",["108","109"],"import { useState, useEffect } from \"react\";\nimport {\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport FormInput from \"./CustomTextField\";\nimport { commerce } from \"../lib/commerce\";\n\nconst AddressForm = ({ checkoutToken, next }) => {\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState(\"\");\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState(\"\");\n\n  const methods = useForm();\n\n  console.log(Object.entries(shippingCountries));\n\n  const countries = Object.entries(shippingCountries).map(([code, name]) => ({\n    id: code,\n    label: name,\n  }));\n  console.log(countries);\n\n  const subdivisions = Object.entries(shippingSubdivisions).map(\n    ([code, name]) => ({\n      id: code,\n      label: name,\n    })\n  );\n  console.log(subdivisions);\n\n  const options = shippingOptions.map((sO) => ({\n    id: sO.id,\n    label: `${sO.description} - (${sO.price.formatted_with_symbol})`,\n  }));\n\n  console.log(options);\n\n  const fetchShippingCountries = async (checkoutTokenId) => {\n    const { countries } = await commerce.services.localeListShippingCountries(\n      checkoutTokenId\n    );\n\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisions = async (countryCode) => {\n    const { subdivisions } = await commerce.services.localeListSubdivisions(\n      countryCode\n    );\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n\n  const fetchShippingOptions = async (\n    checkoutTokenId,\n    country,\n    region = null\n  ) => {\n    const options = await commerce.checkout.getShippingOptions(\n      checkoutTokenId,\n      { country, region }\n    );\n    setShippingOptions(options);\n    setShippingOption(options[0].id);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n\n  useEffect(() => {\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\n  }, [shippingCountry]);\n\n  useEffect(() => {\n    if (shippingSubdivision)\n      fetchShippingOptions(\n        checkoutToken.id,\n        shippingCountry,\n        shippingSubdivision\n      );\n  }, [shippingSubdivision]);\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Shipping address\n      </Typography>\n      <FormProvider {...methods}>\n        <form\n          onSubmit={methods.handleSubmit((data) =>\n            next({\n              ...data,\n              shippingCountry,\n              shippingSubdivision,\n              shippingOption,\n            })\n          )}\n        >\n          <Grid container spacing={3}>\n            <FormInput required name=\"firstName\" label=\"First Name\" />\n            <FormInput required name=\"lastName\" label=\"Last Name\" />\n            <FormInput required name=\"address1\" label=\"Address\" />\n            <FormInput required name=\"email\" label=\"Email\" />\n            <FormInput required name=\"city\" label=\"City\" />\n            <FormInput required name=\"zip   \" label=\"ZIP / Postal code\" />\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Country</InputLabel>\n              <Select\n                value={shippingCountry}\n                fullWidth\n                onChange={(e) => setShippingCountry(e.target.value)}\n              >\n                {countries.map((country) => (\n                  <MenuItem key={country.id} value={country.id}>\n                    {country.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Subdivision</InputLabel>\n              <Select\n                value={shippingSubdivision}\n                fullWidth\n                onChange={(e) => setShippingSubdivision(e.target.value)}\n              >\n                {subdivisions.map((subdivision) => (\n                  <MenuItem key={subdivision.id} value={subdivision.id}>\n                    {subdivision.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Options</InputLabel>\n              <Select\n                value={shippingOption}\n                fullWidth\n                onChange={(e) => setShippingOption(e.target.value)}\n              >\n                {options.map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n          </Grid>\n          <br />\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">\n              Back to Cart\n            </Button>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              Next\n            </Button>\n          </div>\n        </form>\n      </FormProvider>\n    </>\n  );\n};\n\nexport default AddressForm;\n","/Users/rj/e_commerce/src/components/CheckoutForm/CustomTextField.jsx",[],"/Users/rj/e_commerce/src/components/CheckoutForm/Review.jsx",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"110","replacedBy":"114"},{"ruleId":"112","replacedBy":"115"},{"ruleId":"110","replacedBy":"116"},{"ruleId":"112","replacedBy":"117"},{"ruleId":"110","replacedBy":"118"},{"ruleId":"112","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":6,"column":3,"nodeType":"122","messageId":"123","endLine":6,"endColumn":11},{"ruleId":"120","severity":1,"message":"124","line":7,"column":3,"nodeType":"122","messageId":"123","endLine":7,"endColumn":7},{"ruleId":"120","severity":1,"message":"125","line":3,"column":10,"nodeType":"122","messageId":"123","endLine":3,"endColumn":21},{"ruleId":"110","replacedBy":"126"},{"ruleId":"112","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":43,"column":6,"nodeType":"130","endLine":43,"endColumn":12,"suggestions":"131"},{"ruleId":"110","replacedBy":"132"},{"ruleId":"112","replacedBy":"133"},{"ruleId":"128","severity":1,"message":"134","line":80,"column":6,"nodeType":"130","endLine":80,"endColumn":8,"suggestions":"135"},{"ruleId":"128","severity":1,"message":"136","line":93,"column":6,"nodeType":"130","endLine":93,"endColumn":27,"suggestions":"137"},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],["138"],["139"],["138"],["139"],["138"],["139"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'LocalDining' is defined but never used.",["138"],["139"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["140"],["138"],["139"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["141"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["142"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [cart, history]",{"range":"149","text":"150"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"151","text":"152"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"153","text":"154"},[1157,1163],"[cart, history]",[2234,2236],"[checkoutToken.id]",[2517,2538],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]